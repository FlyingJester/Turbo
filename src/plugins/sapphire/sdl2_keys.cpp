#include "sdl2_keys.hpp"

#if SAPPHIRE_USE_SDL2

#include <SDL2/SDL.h>

namespace Sapphire {

const std::array<unsigned, SAPPHIRE_NUM_KEYS> key_numbers = {{ // Translates directly to an SDL key constant
    SDLK_ESCAPE,
    SDLK_F1,
    SDLK_F2,
    SDLK_F3,
    SDLK_F4,
    SDLK_F5,
    SDLK_F6,
    SDLK_F7,
    SDLK_F8,
    SDLK_F9,
    SDLK_F10,
    SDLK_F11,
    SDLK_F12,
    SDLK_BACKQUOTE,      
    SDLK_0,
    SDLK_1, 
    SDLK_2, 
    SDLK_3, 
    SDLK_4, 
    SDLK_5, 
    SDLK_6, 
    SDLK_7, 
    SDLK_8, 
    SDLK_9, 
    SDLK_MINUS,
    SDLK_EQUALS,
    SDLK_BACKSPACE,
    SDLK_TAB,
    SDLK_a, 
    SDLK_b, 
    SDLK_c, 
    SDLK_d, 
    SDLK_e, 
    SDLK_f, 
    SDLK_g, 
    SDLK_h, 
    SDLK_i, 
    SDLK_j, 
    SDLK_k, 
    SDLK_l, 
    SDLK_m, 
    SDLK_n, 
    SDLK_o, 
    SDLK_p, 
    SDLK_q, 
    SDLK_r, 
    SDLK_s, 
    SDLK_t, 
    SDLK_u, 
    SDLK_v, 
    SDLK_w, 
    SDLK_x, 
    SDLK_y, 
    SDLK_z, 
    SDLK_LSHIFT,
    SDLK_RSHIFT,
    SDLK_LCTRL,
    SDLK_RCTRL,
    SDLK_LALT,
    SDLK_RALT,
    SDLK_SPACE,
    SDLK_LEFTBRACKET,
    SDLK_RIGHTBRACKET, 
    SDLK_SEMICOLON,
    SDLK_QUOTE,
    SDLK_COMMA,
    SDLK_PERIOD,
    SDLK_SLASH,
    SDLK_BACKSLASH,
    SDLK_RETURN,
    SDLK_RETURN,
    SDLK_INSERT,
    SDLK_DELETE,
    SDLK_HOME,
    SDLK_END,        
    SDLK_PAGEUP,     
    SDLK_PAGEDOWN, 
    SDLK_UP,
    SDLK_RIGHT,
    SDLK_DOWN,
    SDLK_LEFT,
    SDLK_KP_0,
    SDLK_KP_1,
    SDLK_KP_2,
    SDLK_KP_3,
    SDLK_KP_4,
    SDLK_KP_5,
    SDLK_KP_6,
    SDLK_KP_7,
    SDLK_KP_8,
    SDLK_KP_9,
    SDLK_CAPSLOCK,
    SDLK_NUMLOCKCLEAR,
    SDLK_SCROLLLOCK,
    SDLK_SCROLLLOCK,
}};

} // namespace Sapphire

#endif
